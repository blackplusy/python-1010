学习目标
掌握以下内容

课程内容
1.栈方式访问列表
2.获取列表的索引
3.列表排序
4.列表推导式

1.栈的方式访问列表
先进去的后出来
后进去的先出来
>>> l=[1,2,3,4]
>>> l.append(5)
>>> print(l)
[1, 2, 3, 4, 5]
>>> l.pop()
5
>>> print(l)
[1, 2, 3, 4]

2.获取列表的索引
注意：只能是同种类型数据进行操作。字符串和字符串，数字和数字
>>> l=[1,2,3,4]
>>> print(l.index(2))
1
>>> l=['smy','zgl','zy']
>>> print(l.index('zy'))
2
>>> for index,value in enumerate(l):
...     print('索引是'+str(index)+' 值是'+value)
3.列表的排序
>>> l=[1,3,2,4]
>>> l.reverse()
>>> print(l)
[4, 2, 3, 1]
>>> l=[1,3,5,2,4,6]
>>> l.sort()
>>> print(l)
[1, 2, 3, 4, 5, 6]
4.列表推导式
a.列表推到是是什么
b.优势
c.列表推到式使用


a.列表推到是是什么
又叫列表解析式，提供一种简单方法创建列表
结构中括号中包含一个表达式，然后一个语句，0个或者多个if语句，表达式是任意的类型对象，返回结果是一个新的列表


b.优势
	1.代码短，可读性好
	2.列表推导式速度快

c.列表推到式的使用
标准格式
[表达式 for 变量 in 列表]
[表达式 for 变量 in 列表 if 条件]

1.设计一个小程序，需求如下：
定义一个很长的字符串，如：
str="apple12345678tyuiopfghjkl"
把该字符串按照反向的顺序打印出来，结果如下：
lkjhgfpoiuyt87654321elppa
a.通过reverse()的方法
b.不通过reverse()的方法
2.通过列表方式实现：
    1. 提示用户输入内容，如果为空则提示！
    2. 判断用户输入的字符串首字母是否为元音（A、E、I、O、U）
    3. 如果为元音，则在字符串后加上'ay'
        eg. 如果用户输入'apple'->'appleay'
    4. 如果首字母为辅音字母，则将该字符串首字母移动结尾，并加上'ay'
        eg. 如果用户输入'hello'->'ellohay'。
3.创建一个列表，包含学员名字，接受键盘输入，输入学员名称，判断名称是否存在于列表中，
如果存在，打印名字已经存在列表中，如果不存在，则添加信息到列表中，并且打印已经添加新信息
